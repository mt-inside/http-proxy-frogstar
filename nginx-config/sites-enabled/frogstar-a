# Upgrade http to https
server {
	listen 80;
	listen [::]:80 ipv6only=on;
	server_name _; # respond to all Host headers
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ipv6only=on ssl http2 default_server;

	# This isn't just the name returned, it's the vhost i.e. host header match
	# Note that server_names_hash_bucket_size has been increased
	server_name frogstar-a.empty.org.uk empty.org.uk;


	# TLS Certs
	include /etc/nginx/options-ssl-nginx.conf;
	# Fetched by certbot before nginx starts
	ssl_certificate /etc/letsencrypt/live/frogstar-a.empty.org.uk/fullchain.pem; # all certs including end-entity
	ssl_certificate_key /etc/letsencrypt/live/frogstar-a.empty.org.uk/privkey.pem; # private key
	# for OCSP stapling
	ssl_trusted_certificate /etc/letsencrypt/live/frogstar-a.empty.org.uk/chain.pem; # chain, minus end-entity


	# Username and password by default; turned off for non-sensitive locations
	auth_basic "frogstar-a";
	auth_basic_user_file /etc/nginx/htpasswd;


	# Serve any static html that's been copied or mounted in
	# NB: strongly recommended to pull anything here out to a container
	# (this is k8s' ingress controller, all static content should go
	# in a default-backend-frogstar")
	location / {
		auth_basic off;

		root /usr/share/nginx/html;
		index index.html index.htm;

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location /phpsysinfo/ {
		include proxy_params;
		proxy_pass http://host:40001/;
	}

	location /httpbin/ {
		include proxy_params;
		proxy_pass http://httpbin:8000/;
	}

#        location /sysstats/ {
#            include uwsgi_params;
#            uwsgi_pass sysstats_frontend:3031;
#            uwsgi_param SCRIPT_NAME /sysstats;
#        }
}
